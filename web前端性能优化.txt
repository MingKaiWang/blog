资源加载类
1.减少http请求
2.使用cdn发布静态资源
3.dns预解析
4.使用http2
5.传输数据前gzip压缩数据
6.使用iconfont svg替代图片
7.压缩css js文件大小
8.使用webpack做code spliting
9.资源预加载,hybird在native层加载资源
10.数据懒加载按需加载，非首屏内容滚屏加载
11.hybird资源本地打包成离线包

资源解析类
使用框架开发，浏览器解析虚拟节点的时间也较长
使用ssr在后台解析，同时增强seo

界面渲染类
一、css优化
1.使用css3开启gpu，使用requestAnimationFrame优化帧率
2.首屏样式内联
3.避免频繁的重绘和重排
4.css靠前，js脚本置后
二、脚本优化
1.使用arraybuffer操作内存
2.不滥用闭包
3.使用事件代理绑定事件
4.避免频繁操作dom
5.使用es6

缓存类
1.合理利用缓存 http协议缓存(使用max-age做长cach)/manifest离线缓存/localstorage本地存储（可使用iframe嵌套增加存储量）

安全类
1.使用https对传输的数据加密
2.使用webpack混淆代码


