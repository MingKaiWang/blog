测试又分 单元测试 e2e测试 单元测试在开发时候与业务代码同步编写，属于白盒，e2e又测试人员编写，模拟ui操作，属于黑盒  单元测试 unit (karam + mocha) e2e（nightwatch）

1.unit
前端单元测试：mocha + expect（断言库) + '@vue/test-utils'(vue提供的单元测试库，提供开发者获取vue组件并实例化后的内部状态，以便阐述一个测试用例)
参考资料：https://www.cnblogs.com/sampapa/p/6963936.html
https://cn.vuejs.org/v2/cookbook/unit-testing-vue-components.html#%E5%9F%BA%E6%9C%AC%E7%9A%84%E7%A4%BA%E4%BE%8B
特点：主要是利用'@vue/test-utils'获取实例的内部状态，进行功能和渲染测试。

后台单元测试: mocha + chai(断言库) + Supertest 
参考资料：https://www.imooc.com/article/2631
特点：主要利用supertest进行接口测试

目前国内unit的最大问题在于，在用户意愿不明确并时常修改需求的情况下，如何阐述一个测试用例，这会拖慢整个开发进度

2.e2e
前端ui测试：nightwatch(测试框架) + selenium（测试平台）
参考资料： 
https://www.jianshu.com/p/936bee074b66
https://segmentfault.com/a/1190000006048066
